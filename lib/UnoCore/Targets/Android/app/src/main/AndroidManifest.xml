<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
          package="@(Activity.Package)">

    #if @(Project.Android.SupportsScreens.Resizable:IsSet) || @(Project.Android.SupportsScreens.SmallScreens:IsSet) || @(Project.Android.SupportsScreens.NormalScreens:IsSet) || @(Project.Android.SupportsScreens.LargeScreens:IsSet) || @(Project.Android.SupportsScreens.XLargeScreens:IsSet) || @(Project.Android.SupportsScreens.AnyDensity:IsSet) || @(Project.Android.SupportsScreens.RequiresSmallestWidthDp:IsSet) || @(Project.Android.SupportsScreens.CompatibleWidthLimitDp:IsSet) || @(Project.Android.SupportsScreens.LargestWidthLimitDp:IsSet)
    <supports-screens 
                  #if @(Project.Android.SupportsScreens.Resizable:IsSet)
                  android:resizeable="@(Project.Android.SupportsScreens.Resizable:ToLower)"
                  #endif
                  #if @(Project.Android.SupportsScreens.SmallScreens:IsSet)
                  android:smallScreens="@(Project.Android.SupportsScreens.SmallScreens:ToLower)"
                  #endif
                  #if @(Project.Android.SupportsScreens.NormalScreens:IsSet)
                  android:normalScreens="@(Project.Android.SupportsScreens.NormalScreens:ToLower)"
                  #endif
                  #if @(Project.Android.SupportsScreens.LargeScreens:IsSet)
                  android:largeScreens="@(Project.Android.SupportsScreens.LargeScreens:ToLower)"
                  #endif
                  #if @(Project.Android.SupportsScreens.XLargeScreens:IsSet)
                  android:xlargeScreens="@(Project.Android.SupportsScreens.XLargeScreens:ToLower)"
                  #endif
                  #if @(Project.Android.SupportsScreens.AnyDensity:IsSet)
                  android:anyDensity="@(Project.Android.SupportsScreens.AnyDensity:ToLower)"
                  #endif
                  #if @(Project.Android.SupportsScreens.RequiresSmallestWidthDp:IsSet)
                  android:requiresSmallestWidthDp="@(Project.Android.SupportsScreens.RequiresSmallestWidthDp)"
                  #endif
                  #if @(Project.Android.SupportsScreens.CompatibleWidthLimitDp:IsSet)
                  android:compatibleWidthLimitDp="@(Project.Android.SupportsScreens.CompatibleWidthLimitDp)"
                  #endif
                  #if @(Project.Android.SupportsScreens.LargestWidthLimitDp:IsSet)
                  android:largestWidthLimitDp="@(Project.Android.SupportsScreens.LargestWidthLimitDp)"
                  #endif
                  />
    #endif
    
#if @(Project.Android.SupportsAndroidGo:Test(1, 0))
    <uses-feature android:name="android.hardware.ram.low" android:required="true"/>
#endif
    <uses-feature android:glEsVersion="0x00020000"/>

    @(AndroidManifest.Permission:Join('\n    ', '<uses-permission android:name="', '" />'))
    @(AndroidManifest.RootElement:Join('\n    '))

#if @(LIBRARY:Defined)
    <application android:description="@string/description">
#else
    <application android:label="@string/app_name"
                 android:icon="@mipmap/icon"
                 android:description="@string/description"
                 android:largeHeap="@(Project.Android.LargeHeap:IsSet:Test(@(Project.Android.LargeHeap:Bool),false))"
                 android:allowBackup="@(Project.Android.AllowBackup:IsSet:Test(@(Project.Android.AllowBackup:Bool),false))"
                 android:usesCleartextTraffic="@(Project.Android.UsesCleartextTraffic:IsSet:Test(@(Project.Android.UsesCleartextTraffic:Bool),false))"
                 android:extractNativeLibs="@(Project.Android.ExtractNativeLibs:IsSet:Test(@(Project.Android.ExtractNativeLibs:Bool),true))"
                 >

        <activity android:name="@(Activity.Name:EscapeXml)"
                  android:label="@(Project.Android.ApplicationLabel:EscapeXml)"
                  android:launchMode="singleTask"
#if @(AndroidManifest.DisableTheme:Defined)
                  android:theme="@style/AppTheme"
#else
                  android:theme="@style/Theme.AppCompat"
#endif
                  android:taskAffinity=""
                  android:windowSoftInputMode="adjustResize"
                  android:configChanges="orientation|keyboardHidden|screenSize|smallestScreenSize|uiMode"
#if @(Project.Mobile.Orientations:Equals('Portrait'))
                  android:screenOrientation="portrait"
#elif @(Project.Mobile.Orientations:Equals('LandscapeLeft'))
                  android:screenOrientation="landscape"
#elif @(Project.Mobile.Orientations:Equals('LandscapeRight'))
                  android:screenOrientation="reverseLandscape"
#elif @(Project.Mobile.Orientations:Equals('Landscape'))
                  android:screenOrientation="sensorLandscape"
#else
                  android:screenOrientation="user"
#endif
                  android:windowActionBar="false">
            <meta-data android:name="android.app.lib_name" android:value="@(Activity.Name:EscapeXml)" />
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />
                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
            <intent-filter>
                <action android:name="android.intent.action.VIEW" />
                <category android:name="android.intent.category.DEFAULT" />
                <category android:name="android.intent.category.BROWSABLE" />
#if @(Project.Mobile.UriScheme:IsSet)
                <data android:scheme="@(Project.Mobile.UriScheme)"/>
#endif
                @(AndroidManifest.Activity.ViewIntentFilter:Join('\n    ', '<data ', '/>'))
            </intent-filter>
            
#if @(Project.Android.AssociatedDomains:IsSet)
            <intent-filter android:autoVerify="true">
              <action android:name="android.intent.action.VIEW" />
              <category android:name="android.intent.category.DEFAULT" />
              <category android:name="android.intent.category.BROWSABLE" />
              @(Project.Android.AssociatedDomains:SplitAndJoin('\n\t\t', '<data android:scheme="http" android:host="','" />'))
              @(Project.Android.AssociatedDomains:SplitAndJoin('\n\t\t', '<data android:scheme="https" android:host="','" />'))
            </intent-filter>
#endif

            @(AndroidManifest.ActivityElement:Join('\n        '))
        </activity>
#endif

        @(AndroidManifest.ApplicationElement:Join('\n        '))
#if @(Project.Android.Geo.ApiKey:IsSet)
        <meta-data android:name="com.google.android.gms.version" android:value="@integer/google_play_services_version" />
        <meta-data android:name="com.google.android.geo.API_KEY"
                   android:value="@(Project.Android.Geo.ApiKey)"/>
#endif
    </application>
</manifest>
